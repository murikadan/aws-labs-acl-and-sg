{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "AWS CloudFormation Sample Template vpc_multiple_subnets.template: Sample template showing how to create a VPC with multiple subnets. The first subnet is public and contains the NAT instance, the second subnet is private and contains the application instance",

  "Parameters" : {

    "InstanceType" : {
      "Description" : "WebServer EC2 instance type",
      "Type" : "String",
      "Default" : "t2.micro",
      "AllowedValues" : [ "t2.micro"],
      "ConstraintDescription" : "must be a valid EC2 instance type."
    },

    "InstanceCount" : {
      "Description" : "Number of EC2 instances to launch",
      "Type" : "Number",
      "Default" : "1"
    }
  },

  "Mappings" : {
    "Machines" : {
      "NAT"    : { "Type" : "t2.micro", "image": "ami-0236d0cbbbe64730c"},
      "Private": { "Type" : "t2.micro", "image": "ami-01f14919ba412de34"}
    }
 },


  "Resources" : {

    "VPC" : {
      "Type" : "AWS::EC2::VPC",
      "Properties" : {
        "CidrBlock" : "10.0.1.0/24",
        "Tags" : [
          {"Key" : "Name", "Value" : { "Ref" : "AWS::StackName"} }
        ]
      }
    },

    "PublicSubnet" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : "10.0.1.0/28",
        "MapPublicIpOnLaunch": "true",
        "Tags" : [
          {
             "Key" : "Name",
             "Value" : {
                "Fn::Join": [ "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Public"
                ]
              ]
            }
          }
       ]      
      }
    },

    "InternetGateway" : {
      "Type" : "AWS::EC2::InternetGateway",
      "Properties" : {
        "Tags" : [
          {"Key" : "Name", "Value" : { "Ref" : "AWS::StackName"} }
        ]
      }
    },

    "AttachGateway" : {
       "Type" : "AWS::EC2::VPCGatewayAttachment",
       "Properties" : {
         "VpcId" : { "Ref" : "VPC" },
         "InternetGatewayId" : { "Ref" : "InternetGateway" }
       }
    },

    "PublicRouteTable" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : {"Ref" : "VPC"},
        "Tags" : [
          {
             "Key" : "Name",
             "Value" : {
                "Fn::Join": [ "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Public"
                ]
              ]
            }
          }
       ]      
      }
    },

    "PublicSubnetRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PublicSubnet" },
        "RouteTableId" : { "Ref" : "PublicRouteTable" }
      }
    },

    "PublicNetworkAcl" : {
      "Type" : "AWS::EC2::NetworkAcl",
      "Properties" : {
        "VpcId" : {"Ref" : "VPC"},
        "Tags" : [
          {
             "Key" : "Name",
             "Value" : {
                "Fn::Join": [ "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Public"
                ]
              ]
            }
          }
       ]      
      }
    },

    "PublicSubnetNetworkAclAssociation" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PublicSubnet" },
        "NetworkAclId" : { "Ref" : "PublicNetworkAcl" }
      }
    },

    "PrivateSubnet" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : "10.0.1.16/28",
        "Tags" : [
          {
             "Key" : "Name",
             "Value" : {
                "Fn::Join": [ "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Private"
                ]
              ]
            }
          }
       ]      
      }
    },

    "PrivateRouteTable" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : {"Ref" : "VPC"},
        "Tags" : [
          {
             "Key" : "Name",
             "Value" : {
                "Fn::Join": [ "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Private"
                ]
              ]
            }
          }
       ]      
      }
    },

    "PrivateSubnetRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PrivateSubnet" },
        "RouteTableId" : { "Ref" : "PrivateRouteTable" }
      }
    },

    "PrivateNetworkAcl" : {
      "Type" : "AWS::EC2::NetworkAcl",
      "Properties" : {
        "VpcId" : {"Ref" : "VPC"},
        "Tags" : [
          {
             "Key" : "Name",
             "Value" : {
                "Fn::Join": [ "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "Private"
                ]
              ]
            }
          }
       ]      
      }
    },

    "PrivateSubnetNetworkAclAssociation" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PrivateSubnet" },
        "NetworkAclId" : { "Ref" : "PrivateNetworkAcl" }
      }
    },

    "NATSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable HTTP access on the configured port",
        "VpcId" : { "Ref" : "VPC" },
        "Tags" : [
          {
             "Key" : "Name",
             "Value" : {
                "Fn::Join": [ "-",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "NAT"
                ]
              ]
            }
          }
       ]      
      }
    },

    "PrivateSecurityGroup" : {
        "Type" : "AWS::EC2::SecurityGroup",
        "Properties" : {
          "GroupDescription" : "Enable HTTP access on the configured port",
          "VpcId" : { "Ref" : "VPC" },
          "Tags" : [
            {
               "Key" : "Name",
               "Value" : {
                "Fn::Join": [ "-",
                  [
                    {
                      "Ref": "AWS::StackName"
                    },
                    "App"
                  ]
                ]
              }
            }
         ]      
        }
      },
  
  "NAT" : {
    "Type" : "AWS::EC2::Instance", 
    "Properties" : {
       "ImageId" : { "Fn::FindInMap" : [ "Machines", "NAT", "image" ]},
        "KeyName" : { "Ref" : "AWS::StackName" },
      "InstanceType" : { "Fn::FindInMap" : [ "Machines", "NAT", "Type" ]},
      "SecurityGroupIds" : [{ "Ref" : "NATSecurityGroup" }],
      "SubnetId" : { "Ref" : "PublicSubnet" },
      "Tags" : [
        {
           "Key" : "Name",
           "Value" : {
            "Fn::Join": [ "-",
              [
                {
                  "Ref": "AWS::StackName"
                },
                "NAT"
              ]
            ]
          }
        }
     ]  
    }
  },

  "Private" : {
    "Type" : "AWS::EC2::Instance", 
    "Properties" : {
        "ImageId" : { "Fn::FindInMap" : [ "Machines", "Private", "image" ]},
        "KeyName" : { "Ref" : "AWS::StackName" },
        "InstanceType" : { "Fn::FindInMap" : [ "Machines", "Private", "Type" ]},
      "SecurityGroupIds" : [{ "Ref" : "PrivateSecurityGroup" }],
      "SubnetId" : { "Ref" : "PrivateSubnet" },
      "Tags" : [
        {
           "Key" : "Name",
           "Value" : {
            "Fn::Join": [ "-",
              [
                {
                  "Ref": "AWS::StackName"
                },
                "App"
              ]
            ]
          }
        }
     ]      
    }
  }
},

  "Outputs" : {
    "VPC" : {
      "Description" : "VPC ID",
      "Value" :  { "Ref" : "VPC" }
    }
  }
}